import os
import cv2
import numpy as np
import matplotlib.image as mi
from sklearn.model_selection import train_test_split

dataset = []  # 数据集列表
labels = []  # 标签列表
label = 0  # 第一个标签
# 1022个汉字对应的文件夹编号
lst = ['0', '2', '3', '5', '6', '7', '8', '9', '11', '12', '13', '16', '18', '19', '21', '22', '24', '26', '27', '32', '33', '35', '37', '38', '39', '40', '51', '52', '54', '56',
       '57', '62', '64', '65', '66', '67', '69', '70', '71', '72', '73', '74', '77', '80', '82', '84', '87', '88', '90', '92', '95', '96', '97', '98', '103', '108', '110', '112',
       '115', '116', '117', '118', '120', '122', '127', '128', '130', '132', '133', '134', '143', '145', '146', '147', '148', '151', '152', '153', '155', '156', '163', '166',
       '169', '170', '175', '179', '180', '181', '182', '183', '189', '191', '194', '198', '199', '209', '210', '212', '213', '214', '234', '236', '238', '240', '242', '243',
       '244', '245', '248', '251', '252', '253', '254', '255', '256', '257', '258', '259', '260', '261', '262', '265', '269', '273', '277', '278', '279', '282', '285', '286',
       '287', '289', '293', '297', '301', '311', '312', '315', '318', '319', '322', '323', '324', '325', '326', '327', '328', '330', '332', '333', '335', '336', '340', '341',
       '344', '346', '347', '352', '356', '360', '362', '363', '364', '365', '367', '368', '369', '373', '374', '387', '390', '391', '399', '400', '402', '403', '404', '407',
       '408', '409', '413', '415', '419', '420', '424', '426', '427', '428', '429', '430', '431', '434', '437', '439', '442', '443', '444', '449', '450', '452', '453', '455',
       '456', '457', '458', '459', '461', '462', '463', '467', '468', '470', '471', '472', '473', '476', '477', '478', '479', '480', '481', '482', '486', '487', '488', '491',
       '492', '493', '496', '499', '505', '506', '509', '510', '517', '518', '522', '525', '528', '531', '532', '538', '542', '553', '558', '564', '573', '587', '592', '613',
       '632', '643', '644', '645', '646', '649', '651', '652', '653', '654', '657', '658', '660', '662', '663', '666', '670', '673', '674', '689', '698', '700', '702', '704',
       '705', '719', '726', '732', '733', '735', '736', '740', '741', '742', '743', '745', '746', '747', '748', '749', '750', '751', '752', '753', '755', '756', '759', '760',
       '762', '765', '771', '776', '779', '780', '781', '797', '801', '809', '837', '838', '840', '841', '845', '846', '848', '856', '860', '861', '862', '865', '867', '869',
       '871', '874', '875', '876', '881', '884', '885', '886', '892', '894', '900', '903', '904', '905', '908', '910', '911', '912', '915', '916', '917', '918', '924', '927',
       '929', '930', '932', '934', '943', '944', '949', '957', '979', '982', '983', '986', '988', '989', '990', '992', '996', '997', '1000', '1009', '1010', '1012', '1013', '1014',
       '1021', '1022', '1023', '1024', '1027', '1029', '1033', '1034', '1037', '1038', '1042', '1045', '1057', '1058', '1059', '1063', '1065', '1070', '1075', '1076', '1077',
       '1079', '1082', '1086', '1090', '1092', '1094', '1095', '1096', '1097', '1098', '1100', '1103', '1107', '1108', '1110', '1111', '1115', '1120', '1122', '1127', '1129',
       '1132', '1135', '1137', '1138', '1142', '1152', '1166', '1176', '1193', '1198', '1200', '1202', '1231', '1232', '1234', '1235', '1243', '1246', '1247', '1251', '1257',
       '1258', '1260', '1267', '1269', '1270', '1271', '1274', '1277', '1278', '1280', '1287', '1288', '1300', '1304', '1312', '1325', '1335', '1336', '1338', '1339', '1352',
       '1356', '1370', '1372', '1375', '1384', '1387', '1393', '1394', '1395', '1397', '1405', '1406', '1408', '1424', '1451', '1458', '1467', '1468', '1469', '1471', '1472',
       '1474', '1475', '1479', '1484', '1487', '1489', '1491', '1495', '1496', '1497', '1500', '1504', '1505', '1506', '1507', '1508', '1511', '1512', '1514', '1515', '1516',
       '1518', '1520', '1523', '1524', '1530', '1532', '1534', '1535', '1536', '1540', '1542', '1549', '1553', '1557', '1566', '1570', '1572', '1575', '1576', '1577', '1578',
       '1579', '1581', '1584', '1585', '1586', '1587', '1588', '1589', '1590', '1592', '1596', '1598', '1599', '1600', '1601', '1603', '1605', '1606', '1609', '1611', '1612',
       '1617', '1618', '1619', '1620', '1622', '1624', '1626', '1627', '1633', '1637', '1640', '1645', '1648', '1653', '1657', '1661', '1662', '1663', '1664', '1665', '1666',
       '1693', '1695', '1696', '1709', '1717', '1730', '1733', '1744', '1745', '1747', '1754', '1755', '1756', '1757', '1758', '1769', '1771', '1777', '1778', '1780', '1785',
       '1787', '1790', '1798', '1803', '1804', '1807', '1809', '1816', '1824', '1832', '1834', '1835', '1843', '1845', '1846', '1850', '1856', '1860', '1862', '1863', '1867',
       '1872', '1880', '1881', '1884', '1885', '1890', '1891', '1901', '1905', '1916', '1922', '1938', '1940', '1943', '1954', '1958', '1966', '1970', '1975', '1980', '1983',
       '1985', '1996', '2015', '2018', '2019', '2020', '2022', '2042', '2048', '2059', '2065', '2071', '2076', '2084', '2086', '2093', '2100', '2101', '2103', '2104', '2109',
       '2112', '2119', '2130', '2142', '2144', '2150', '2151', '2152', '2157', '2158', '2165', '2166', '2168', '2187', '2193', '2195', '2197', '2201', '2202', '2203', '2205',
       '2210', '2213', '2215', '2223', '2239', '2268', '2269', '2271', '2277', '2284', '2287', '2289', '2291', '2293', '2296', '2299', '2300', '2302', '2303', '2305', '2306',
       '2314', '2315', '2336', '2339', '2342', '2344', '2347', '2349', '2353', '2358', '2362', '2368', '2369', '2383', '2386', '2392', '2393', '2396', '2398', '2403', '2414',
       '2422', '2423', '2424', '2432', '2433', '2435', '2438', '2444', '2445', '2450', '2452', '2454', '2456', '2470', '2472', '2475', '2479', '2484', '2489', '2492', '2499',
       '2504', '2508', '2509', '2512', '2525', '2526', '2528', '2529', '2531', '2537', '2541', '2550', '2552', '2554', '2561', '2563', '2564', '2565', '2570', '2575', '2576',
       '2579', '2580', '2581', '2583', '2584', '2585', '2589', '2592', '2595', '2598', '2600', '2605', '2608', '2611', '2617', '2627', '2628', '2633', '2636', '2637', '2641',
       '2646', '2650', '2655', '2667', '2670', '2671', '2672', '2673', '2690', '2691', '2711', '2716', '2724', '2728', '2729', '2737', '2740', '2744', '2747', '2749', '2755',
       '2781', '2783', '2784', '2798', '2808', '2809', '2811', '2813', '2824', '2827', '2830', '2833', '2837', '2838', '2841', '2845', '2858', '2864', '2868', '2876', '2881',
       '2883', '2894', '2897', '2898', '2938', '2955', '2979', '2994', '2998', '3000', '3007', '3008', '3020', '3024', '3025', '3041', '3042', '3044', '3045', '3046', '3048',
       '3050', '3051', '3052', '3053', '3054', '3061', '3064', '3066', '3067', '3069', '3070', '3072', '3073', '3076', '3078', '3081', '3082', '3084', '3085', '3087', '3094',
       '3098', '3103', '3109', '3112', '3114', '3117', '3121', '3124', '3149', '3159', '3162', '3167', '3170', '3174', '3181', '3182', '3189', '3209', '3213', '3216', '3227',
       '3228', '3231', '3233', '3252', '3257', '3261', '3262', '3265', '3266', '3267', '3269', '3273', '3277', '3285', '3292', '3294', '3298', '3299', '3302', '3303', '3305',
       '3306', '3307', '3308', '3310', '3314', '3316', '3321', '3322', '3323', '3326', '3328', '3329', '3333', '3337', '3338', '3348', '3350', '3362', '3378', '3382', '3388',
       '3403', '3411', '3414', '3415', '3417', '3418', '3421', '3439', '3442', '3445', '3450', '3473', '3486', '3499', '3500', '3503', '3507', '3514', '3524', '3526', '3527',
       '3528', '3529', '3530', '3531', '3532', '3534', '3535', '3538', '3541', '3542', '3546', '3547', '3557', '3564', '3565', '3568', '3570', '3576', '3578', '3582', '3591',
       '3594', '3598', '3599', '3601', '3602', '3618', '3619', '3621', '3622', '3623', '3629', '3631', '3640', '3646', '3648', '3649', '3670', '3672', '3690', '3697', '3700',
       '3708', '3711', '3736', '3738', '3741', '3745', '3749']


def load_data(filepath):
    # 遍历filepath下所有文件，包括子目录
    files = os.listdir(filepath)
    for fi in files:
        fi_d = os.path.join(filepath, fi + '/')
        if os.path.isdir(fi_d):
            if fi in lst:
                global label
                load_data(fi_d)
                label += 1
        else:
            labels.append(label)
            img = mi.imread(fi_d[:-1])
            img2 = cv2.resize(img, (64, 64))  # (64,64,3)
            dataset.append(img2)

    # 在训练集中取一部分作为验证集
    train_image, val_image, train_label, val_label = train_test_split(
        np.array(dataset), np.array(labels), random_state=7)

    return train_image, val_image, train_label, val_label
