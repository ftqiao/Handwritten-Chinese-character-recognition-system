import os
import cv2
import numpy as np
import matplotlib.image as mi
from sklearn.model_selection import train_test_split

dataset = []  # 数据集列表
labels = []  # 标签列表
label = 0  # 第一个标签
# 1022个汉字对应的文件夹编号
lst = ['02048', '00016', '00733', '00651', '01012', '01600', '01570', '03473', '02315', '02691', '02392', '02525', '03269', '01024', '01103', '00780', '00992', '02827', '02403',
       '02845', '00476', '02808', '01231', '02396', '02744', '02531', '03690', '00765', '00856', '01057', '01824', '01339', '01576', '02344', '03231', '03388', '01497', '00990',
       '01075', '01059', '02119', '02287', '01235', '02432', '03072', '03285', '00407', '01338', '00260', '02580', '00886', '00917', '01626', '00644', '02450', '00285', '02151',
       '03323', '00932', '02059', '00002', '02386', '00341', '01662', '03530', '00649', '01996', '02897', '00145', '00732', '00356', '00234', '01278', '02838', '02667', '00026',
       '03073', '02423', '01577', '02383', '03622', '00593', '00120', '00670', '00332', '01835', '02564', '00531', '01034', '02349', '03421', '01270', '01540', '01620', '00689',
       '00499', '03159', '00262', '01375', '02750', '01115', '03362', '00065', '01138', '01534', '00336', '00785', '00021', '03051', '01983', '00151', '01524', '00040', '00182',
       '03507', '01394', '00470', '03417', '01619', '00096', '00523', '01592', '01287', '00146', '01637', '01065', '00875', '01108', '00988', '00525', '00929', '02019', '01596',
       '00430', '00592', '02489', '00510', '02203', '00072', '00242', '02633', '00236', '00587', '02193', '01076', '02784', '02747', '00904', '03048', '02833', '00256', '02749',
       '00035', '03649', '00090', '01940', '00437', '01589', '01370', '03084', '00364', '02155', '01135', '01274', '02433', '00098', '03162', '00903', '03442', '03602', '03741',
       '01095', '01553', '01603', '03053', '03305', '01745', '01664', '01916', '00865', '03115', '00326', '00749', '03542', '00323', '01863', '00979', '00983', '01585', '01535',
       '00115', '00163', '00522', '03499', '03098', '00532', '00403', '02561', '01092', '00424', '00840', '01966', '00301', '03182', '00287', '00862', '02504', '00884', '02204',
       '02268', '03541', '03670', '02342', '00112', '01506', '02277', '02585', '02213', '02565', '00455', '02554', '01549', '00179', '00117', '00243', '02864', '00289', '02142',
       '03500', '00212', '01587', '02201', '00122', '00269', '00132', '02157', '01010', '00240', '01397', '03738', '03233', '00740', '03618', '01507', '02824', '00318', '02215',
       '03085', '02470', '00194', '00809', '02528', '02303', '03535', '01588', '03623', '00402', '00073', '01515', '00012', '00879', '02627', '01586', '01809', '00509', '02314',
       '00328', '00666', '02444', '03070', '01867', '00482', '01755', '00743', '00861', '03538', '00387', '00175', '03565', '01094', '01584', '00340', '02291', '01100', '01475',
       '03591', '00214', '01372', '02284', '01142', '03114', '00486', '01832', '01566', '02150', '03174', '00238', '03170', '01850', '02526', '03213', '02362', '01021', '00322',
       '01097', '01107', '03526', '02422', '00265', '01086', '00471', '03329', '02269', '00871', '01657', '00062', '00082', '01406', '00070', '00986', '00084', '00255', '01045',
       '01609', '02101', '01845', '02598', '03078', '00130', '02611', '01013', '02445', '00700', '02671', '02737', '02576', '00726', '00209', '00245', '01200', '01581', '01696',
       '02065', '00747', '02998', '00413', '03700', '00022', '00564', '00198', '00632', '01922', '01127', '03124', '00517', '00390', '02187', '02570', '00653', '01881', '02955',
       '00254', '00325', '00752', '02109', '01042', '00997', '00779', '00080', '02512', '00373', '01557', '03543', '01598', '00352', '01771', '00542', '03445', '03333', '00705',
       '00153', '00982', '01243', '02583', '00037', '00416', '02729', '00261', '00277', '02152', '00191', '01496', '02641', '02454', '00420', '00528', '00006', '00797', '03672',
       '00011', '00443', '00487', '01504', '03414', '01798', '00654', '00097', '03007', '00573', '01901', '03067', '00103', '00491', '00957', '00181', '00657', '00867', '03557',
       '00660', '00874', '03640', '02781', '02358', '02369', '01505', '00837', '02103', '02294', '02509', '01905', '03546', '00279', '00428', '03209', '01474', '03228', '03064',
       '03041', '03054', '00698', '00870', '00924', '01234', '01622', '02650', '00558', '03121', '03299', '00391', '02605', '00116', '02393', '03069', '03599', '03167', '03094',
       '00019', '00148', '00409', '01717', '00934', '03322', '00453', '02093', '01405', '02452', '03265', '00297', '02168', '03314', '03564', '03594', '00312', '02353', '00442',
       '00057', '01257', '03211', '00996', '00746', '00989', '00850', '01666', '02755', '00399', '01624', '00908', '02798', '03267', '00024', '03697', '00005', '00273', '01111',
       '03382', '03052', '02673', '00759', '01518', '02563', '01787', '00439', '02690', '02699', '01756', '00335', '02809', '00282', '01393', '00927', '01578', '03277', '03261',
       '00673', '01884', '02347', '02398', '03629', '01785', '00753', '03252', '01542', '02300', '01511', '03350', '01288', '01312', '01875', '02484', '00008', '02195', '01152',
       '03087', '00170', '00324', '00134', '00415', '00051', '03316', '00663', '01247', '02811', '01536', '03302', '00496', '02672', '00278', '01843', '02584', '02339', '03338',
       '00069', '01260', '00426', '02271', '03598', '00750', '00319', '03273', '00003', '00404', '01079', '03298', '00087', '00133', '00918', '00199', '02499', '00652', '00118',
       '00147', '00911', '02239', '02646', '02655', '03348', '01176', '01251', '01733', '01943', '01508', '02435', '03749', '00127', '00467', '01232', '00143', '00183', '00745',
       '02813', '02637', '02197', '02086', '03000', '03215', '00038', '00128', '00658', '00257', '03328', '00449', '03189', '00505', '02740', '03042', '01612', '03418', '01757',
       '01617', '00064', '01058', '03524', '01605', '03631', '01202', '00776', '00027', '00248', '01356', '01451', '02336', '00311', '00704', '01408', '01653', '01022', '01489',
       '02475', '01790', '02636', '01601', '02595', '00054', '02020', '01246', '00327', '01137', '02130', '00056', '02223', '00885', '03025', '03582', '01613', '03576', '01000',
       '02202', '03024', '00480', '02600', '02979', '02165', '03570', '00462', '01258', '01980', '00074', '03135', '02302', '02084', '02592', '00771', '02472', '00429', '00662',
       '02780', '00748', '01890', '03306', '01954', '00719', '00244', '00869', '01532', '02158', '00848', '01009', '02479', '00213', '00258', '03646', '02617', '00039', '00337',
       '00741', '01512', '01640', '02412', '02508', '00643', '00431', '03081', '03514', '03532', '00742', '00860', '03745', '01627', '03082', '01780', '01633', '01500', '00553',
       '03486', '00400', '01063', '01468', '01530', '00702', '01575', '01856', '00845', '03294', '03708', '02144', '02830', '02858', '00763', '02042', '03257', '03527', '01526',
       '00493', '02550', '03601', '03181', '00916', '00252', '01300', '03337', '00762', '00354', '00838', '02305', '00088', '00330', '01132', '00032', '01271', '01645', '01336',
       '01014', '03262', '01469', '01777', '03711', '01958', '03579', '00506', '00095', '03432', '01872', '01387', '02704', '03321', '01807', '01985', '01487', '00369', '00155',
       '00374', '01122', '02868', '03547', '00013', '00092', '01280', '01747', '03534', '01110', '00518', '02293', '01098', '01479', '02581', '03303', '00066', '00756', '00944',
       '02296', '03529', '01792', '03076', '01129', '01860', '02414', '02306', '02299', '00538', '02537', '00477', '02883', '00492', '01618', '01862', '02112', '02424', '00067',
       '00180', '00892', '00463', '00472', '00427', '00344', '00468', '01778', '00210', '00077', '01027', '00009', '00458', '03310', '00363', '02205', '00949', '01033', '00018',
       '00368', '01648', '00108', '01325', '03066', '01938', '00943', '01709', '01484', '00801', '03326', '02783', '00930', '01693', '00362', '00900', '02716', '01520', '01744',
       '00166', '00156', '00481', '01037', '01803', '01335', '00755', '00135', '00905', '03403', '00894', '03648', '01514', '01516', '03008', '02368', '01970', '00646', '01082',
       '01663', '00333', '00751', '02210', '01975', '01495', '03308', '00169', '03549', '00286', '02724', '00253', '03531', '03578', '00411', '01472', '00456', '01166', '00479',
       '01606', '01730', '01467', '01077', '01023', '00488', '01769', '02628', '01120', '01695', '00347', '00189', '00434', '02541', '03227', '00846', '01816', '01572', '02456',
       '01473', '00251', '00346', '00881', '00450', '02100', '01599', '02898', '00033', '03061', '01384', '03109', '00915', '00360', '00876', '01269', '03050', '03450', '03621',
       '00910', '00110', '02711', '03736', '01038', '02881', '02018', '03020', '02015', '00645', '03103', '03503', '00408', '02104', '03619', '03045', '00365', '01579', '00473',
       '01590', '01661', '02994', '03266', '02492', '02238', '02022', '02076', '00736', '03378', '03340', '02071', '02837', '01395', '01090', '00760', '02841', '01491', '02938',
       '03307', '00152', '00071', '03439', '01304', '00444', '02670', '03149', '03117', '03044', '01458', '01198', '01471', '01846', '02589', '01352', '03220', '01029', '02608',
       '00735', '01758', '01891', '00459', '00007', '00315', '00461', '00912', '03415', '02552', '01193', '00457', '02876', '03292', '01754', '02575', '02894', '01665', '01096',
       '02529', '03568', '00259', '01267', '01834', '01880', '01885', '00781', '01424', '02579', '03046', '03411', '00367', '00419', '00452', '00000', '00293', '03169', '00841',
       '02728', '02166', '01070', '01611', '02438', '03216', '03112', '00052', '01277', '00613', '01523', '01804', '00478', '00674', '03528']


def load_data(filepath):
    # 遍历filepath下所有文件，包括子目录
    files = os.listdir(filepath)
    for fi in files:
        fi_d = os.path.join(filepath, fi + '/')
        if os.path.isdir(fi_d):
            if fi in lst:
                global label
                load_data(fi_d)
                label += 1
        else:
            labels.append(label)
            img = mi.imread(fi_d[:-1])
            img2 = cv2.resize(img, (64, 64))  # (64,64,3)
            dataset.append(img2)

    # 在训练集中取一部分作为验证集
    train_image, val_image, train_label, val_label = train_test_split(
        np.array(dataset), np.array(labels), random_state=7)

    return train_image, val_image, train_label, val_label
